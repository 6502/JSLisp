(defun fclosure (x)
  (do ((result (js-object))
       (todo (list x)))
      ((empty todo)
         (dolist (k (sort (keys result)))
           (display ~"{k} -> {(aref result k)}"))
         result)
    (let ((new-todo (list)))
      (dolist (x todo)
        (dolist (fn (or (and (symbol-function x)
                             (. (symbol-function x) outcalls))
                        (list)))
          (unless (aref result fn)
            (setf (aref result fn) (+ (or (aref result (. x name)) "") "/" fn))
            (let* ((i (index "$$" fn))
                   (y (intern (demangle fn) (slice fn 0 i))))
              (push y new-todo)))))
      (setf todo new-todo))))