(import * from html)

(defun main ()
  (base-css "examples/base.css")
  (main-view "examples/main.html")
  (let** ((board (make-array 9 "-"))
          (color 0)
          (user "")
          (#'update ()
            (let** ((win null)
                    (#'check (a b c)
                      (if (and (not win)
                               (/= (aref board a) "-")
                               (= (aref board a) (aref board b) (aref board c)))
                          (setf win (list a b c))))
                    (winners '((0 1 2) (3 4 5) (6 7 8)
                               (0 3 6) (1 4 7) (2 5 8)
                               (0 4 8) (2 4 6))))
              (dolist ((a b c) winners)
                (check a b c))
              (when win
                (setf color -1)
                (dolist (x win)
                  (set-style (. ##~"c{x}" parentNode)
                             background-color "#F00")))
              (dotimes (i 9)
                (setf (. ##~"c{i}" src) (logo i)))))
          (#'new-game ()
            (dotimes (i 9)
              (set-style (. ##~"c{i}" parentNode)
                         background-color null))
            (setf board (make-array 9 "-"))
            (setf color 0)
            (update))
          (#'logo (x)
            ~"img/{(aref board x)}.png")
          (#'login-view ()
            (set-view ##view "examples/login.html")
            (setf ##user.value "")
            (setf ##password.value "")
            (focus ##user))
          (#'check-password ()
            (if (and (= ##user.value "agri")
                     (= ##password.value "pw"))
                (progn
                  (setf user ##user.value)
                  (board-view))
                (progn
                  (focus ##user)
                  (show ##errmsg text: "Invalid user/password" delay: 2000))))
          (#'play (i)
            (when (and (/= color -1) (= "-" (aref board i)))
              (setf (aref board i) (aref "ox" color))
              (setf color (- 1 color))
              (update)))
          (#'board-view ()
            (set-view ##view "examples/board.html")
            (update)))
    (login-view)))

(main)
